/*
 * Copyright 2023 the original author or authors.
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * https://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.github.nramc.geojson.internal.utils;

import java.lang.annotation.Documented;
import java.lang.annotation.Retention;
import java.lang.annotation.Target;

import static java.lang.annotation.ElementType.CONSTRUCTOR;
import static java.lang.annotation.ElementType.METHOD;
import static java.lang.annotation.ElementType.TYPE;
import static java.lang.annotation.RetentionPolicy.RUNTIME;

/**
 * Indicates that the annotated code should be excluded from code coverage reports.
 * <p>
 * This annotation is typically used to mark code that is automatically generated,
 * boilerplate, or otherwise not relevant for test coverage metrics.
 * </p>
 *
 * <h3>Usage:</h3>
 * <ul>
 *   <li>Apply this annotation to classes, methods, or constructors that you want
 *       to exclude from JaCoCo (or other similar tools) code coverage reports.</li>
 *   <li>Ensure your build tool is configured to recognize and exclude elements
 *       annotated with {@code @Generated} from code coverage.</li>
 * </ul>
 *
 * <h3>Configuration:</h3>
 * To make this annotation effective for JaCoCo, configure your build system (e.g., Maven or Gradle)
 * to exclude annotated code from coverage metrics. Example configurations can be found
 * in the documentation of the coverage tools.
 *
 * <h3>Example:</h3>
 * <pre>
 * {@code
 * @Generated
 * public void autoGeneratedMethod() {
 *     // Code here will be excluded from coverage.
 * }
 * }
 * </pre>
 *
 * @see java.lang.annotation.Documented
 * @see java.lang.annotation.Retention
 * @see java.lang.annotation.Target
 */
@Documented
@Retention(RUNTIME)
@Target({TYPE, METHOD, CONSTRUCTOR})
public @interface Generated {
    // This annotation serves as a marker for exclusion from code coverage.

    /**
     * Optional description explaining why the code is excluded from coverage.
     *
     * @return the description of the reason for exclusion.
     */
    String value() default "";
}
